<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.redclip.admin.model.dao.AdminMapper">
	
	<sql id="reports">
		SELECT
                REPORT_NO reportNo,
		        REPORT_TITLE reportTitle,
		        REPORT_CONTENT reportContent,
		        REPORT_DATE reportDate,
		        REPORTED_ID reportedId,
		        REPORT_TYPE reportType,
		        REFERENCE_NO referenceNo
	</sql>
	
	<!-- 누적 신고 횟수 -->
	<select id="count">
		SELECT
				COUNT(REPORTED_ID)
		  FRO
		  		TB_MEM_REPORT
		  WHERE
		  		REPORTED_ID = #{reportedId}
	</select>
	
	<!-- 신고 내역 상세 조회 -->
	<select id="getDetail">
		<include refid="reports" />
		FROM
				TB_MEM_REPORT
	   WHERE
	   			REPORTED_ID = #{reportedId}
	</select>
	
	<!-- 신고 내역 조회 -->
	<select id="findAll" resultType="report">
		<include refid="reports"/>
		  FROM
				(
		SELECT
                REPORT_NO,
		        REPORT_TITLE,
		        REPORT_CONTENT,
		        REPORT_DATE,
		        REPORTED_ID,
		        REPORT_TYPE,
		        REFERENCE_NO
         FROM
                 TB_MEM_REPORT
         ORDER
			BY
				REPORT_DATE DESC
                )
        WHERE
				ROWNUM BETWEEN 1 AND 5
		
	</select>
	
	<select id="allMember" resultType="member">
		SELECT
				USER_ID userId,
				USER_NAME userName,
				CREATE_DATE createDate,
				STATUS status,
				NICKNAME nickname
		  FROM
		  		TB_MEMBER
		  WHERE
		  		STATUS = 'Y'
	</select>
	
	<select id="status" resultType="member" parameterType="status">
		SELECT
				S.USER_ID userId,
				M.USER_NAME userName,
				M.NICKNAME nickname,
                M.CREATE_DATE createDate,
                M.STATUS status,
				S.DROP_DATE dropDate,
				S.DROP_REASON dropReason
		  FROM
		  		TB_MEM_STATUS S, TB_MEMBER M
       	 WHERE  
                S.USER_ID = M.USER_ID
	</select>
	
	<update id="changeMember" parameterType="string">
		UPDATE
				TB_MEMBER
		   SET
		   		STATUS = 'Y'
		 WHERE
		 		STATUS = 'N'
		   AND
		   		USER_ID
		   	IN
		   		<foreach item="id" collection="members"
		        open="(" separator="," close=")">
       			#{id}
   				</foreach>
	</update>
	
	<!-- 탈퇴 목록 삭제 -->
	<delete id="getMember" parameterType="string">
		DELETE
		  FROM
		        TB_MEM_STATUS
		 WHERE
		        USER_ID
		    IN
        		<foreach item="id" collection="members"
        		open="(" separator="," close=")">
        		#{id}
        		</foreach>
	</delete>
	
	<!-- 회원 삭제 -->
	<delete id="dropMember" parameterType="string" >
		DELETE
		  FROM
		        TB_MEMBER
		 WHERE
		        STATUS = 'N'
		   AND
		        USER_ID
		    IN
       		<foreach item="id" collection="members"
       		open="(" separator="," close=")">
	       		#{id}
       		</foreach>
	</delete>

	<!-- 신고내역 상세보기 -->
	<select id="getReportDetail" parameterType="reportMember" resultType="reportMember">
	 	SELECT
	 		REPORT_NO reportNo,
	 		REPORT_TITLE reportTitle ,
	 		REPORT_CONTENT reportContent,
	 		REPORT_DATE reportDate,
	 		REPORTED_ID reportedId,
	 		REPORT_TYPE reportType,
	 		REFERENCE_NO referenceNo,
	 		(SELECT COUNT 
	 					(REPORTED_ID)
			FROM 
					TB_MEM_REPORT
			WHERE 
					REPORTED_ID = #{reportedId}) AS reportCount
	 	FROM 
	 		TB_MEM_REPORT
	 	WHERE
	 		REPORT_NO =#{reportNo}
	</select>
	<!-- 신고내역 삭제하기  -->
	<delete id="deleteReport" parameterType="_int">
		 DELETE 
	        FROM
	        	TB_MEM_REPORT
	    WHERE 
	        	REPORT_NO = #{reportNo}
			
	</delete>
	

</mapper>